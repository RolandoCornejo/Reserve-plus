{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\RestaurantScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/core';\nimport firebase from \"../firebase\";\nexport default function RestaurantScreen(props) {\n  var navigation = useNavigation();\n  var restauranteId = props.route.params.restauranteId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurante = _useState2[0],\n      setRestaurante = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.db.collection('restaurantes').doc(restauranteId).get());\n\n          case 2:\n            data = _context.sent;\n            console.log(data);\n            setRestaurante(firebase.db.collection('restaurantes').doc(restauranteId).get());\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    }, React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 81\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"This is the page for the \", name, \" Restaurant\"));\n}","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/RestaurantScreen.js"],"names":["React","useState","useEffect","useNavigation","firebase","RestaurantScreen","props","navigation","restauranteId","route","params","restaurante","setRestaurante","loading","setLoading","db","collection","doc","get","data","console","log","flex","alignItems","alignContent","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,MAAOK,aAAP,GAAsBF,KAAK,CAACG,KAAN,CAAYC,MAAlC,CAAOF,aAAP;;AAEA,kBAAmCP,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOU,WAAP;AAAA,MAAmBC,cAAnB;;AACA,mBAA2BX,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAeC,UAAf;;AAEAZ,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAaOE,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,cAAvB,EAAuCC,GAAvC,CAA2CT,aAA3C,EAA0DU,GAA1D,EAbP;;AAAA;AAaNC,YAAAA,IAbM;AAcPC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACCP,YAAAA,cAAc,CAACR,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,cAAvB,EAAuCC,GAAvC,CAA2CT,aAA3C,EAA0DU,GAA1D,EAAD,CAAd;;AAfM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAgBP,EAhBO,CAAT;;AAkBA,MAAGL,OAAH,EAAW;AACP,WAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,UAAU,EAAC,QAAnB;AAA4BC,QAAAA,YAAY,EAAC;AAAzC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,CAAP;AACH;;AAED,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgCC,IAAhC,gBADJ,CADJ;AAKH","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, ActivityIndicator } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport firebase from '../firebase'\r\n\r\nexport default function RestaurantScreen(props) {\r\n    const navigation = useNavigation()\r\n    const {restauranteId}=props.route.params\r\n\r\n    const [restaurante,setRestaurante]=useState({});\r\n    const [loading,setLoading]=useState(true)\r\n\r\n    useEffect(async()=>{\r\n        \r\n        /*const subscriber = firebase.db.collection('restaurantes').doc(restauranteId).onSnapshot(querySnapshot => {\r\n            const restaurantes = []\r\n           /* querySnapshot.forEach(docs=>{\r\n                const {nombre,color}=docs.data()\r\n                restaurantes.push({key:docs.id,nombre,color})\r\n            })\r\n            //setRestaurantes(restaurantes)\r\n            console.log(restaurantesquerySnapshot.data())\r\n            //setLoading(false)\r\n        })\r\n        return ()=>subscriber()*/\r\n        data = await firebase.db.collection('restaurantes').doc(restauranteId).get()\r\n       console.log(data)\r\n        setRestaurante(firebase.db.collection('restaurantes').doc(restauranteId).get())\r\n    },[])   \r\n\r\n    if(loading){\r\n        return <View style={{flex:1,alignItems:'center',alignContent:'center'}}><ActivityIndicator/></View>\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>This is the page for the {name} Restaurant</Text>\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}