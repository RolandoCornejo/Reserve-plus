{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\LoginScreen.js\";\n\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"../firebase\";\nimport { Icon } from 'react-native-elements';\n\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth.onAuthStateChanged(function (user) {\n      if (user) navigation.replace('Home');\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    firebase.auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email);\n    }).catch(function (error) {\n      error.code == 'auth/weak-password' ? alert('Contraseña muy débil, debe ser de 6 caracteres o más') : error.code == 'auth/email-already-in-use' ? alert('Este usuario ya existe') : error.code == 'auth/invalid-email' ? alert('El correo está mal escrito') : alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    firebase.auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('logged with email');\n    }).catch(function (error) {\n      error.code == 'auth/wrong-password' ? alert('Contraseña incorrecta') : error.code == 'auth/invalid-email' ? alert('El correo está mal escrito') : alert(error.message);\n    });\n  };\n\n  var handleGoogle = function handleGoogle() {\n    firebase.auth.signInWithPopup(firebase.provider).then(function (result) {\n      var credential = result.credential;\n      var token = credential.accessToken;\n      var user = result.user;\n\n      try {\n        var data = firebase.db.collection('usuarios').where('correo', '==', user.email).get();\n        console.log(data.id());\n      } catch (error) {\n        firebase.db.collection('usuarios').add({\n          correo: user.email\n        });\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"height\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Reserve+\"), React.createElement(View, {\n    style: styles.inputconntainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Correo\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text.replace('\\s+', ''));\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Contrase\\xF1a\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttoncontainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleLogin,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Iniciar sesi\\xF3n\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    style: [styles.button, styles.buttonOutLine],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonOutLineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Registrarse\"))), React.createElement(View, {\n    style: styles.inputconntainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleGoogle,\n    style: [styles.button, styles.buttonOutLine, {\n      marginVertical: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonOutLineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \" \", React.createElement(Icon, {\n    name: \"google\",\n    type: \"antdesign\",\n    color: \"#FE2746\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 61\n    }\n  }), \"   Iniciar con Google\"))));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  inputconntainer: {\n    width: '80%'\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 400,\n    maxWidth: 1000,\n    marginHorizontal: 'auto'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    borderColor: 'lightgray',\n    borderWidth: 1\n  },\n  buttoncontainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    width: '100%',\n    backgroundColor: '#FE2746',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  buttonOutLine: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#FE2746',\n    borderWidth: 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonOutLineText: {\n    color: '#FE2746',\n    fontWeight: 'bold'\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 50,\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/LoginScreen.js"],"names":["useNavigation","React","useState","useEffect","firebase","Icon","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","auth","onAuthStateChanged","user","replace","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","code","alert","message","handleLogin","signInWithEmailAndPassword","handleGoogle","signInWithPopup","provider","result","credential","token","accessToken","data","db","collection","where","get","id","add","correo","styles","container","title","inputconntainer","text","input","buttoncontainer","button","buttonText","navigate","buttonOutLine","buttonOutLineText","marginVertical","StyleSheet","create","width","justifyContent","alignItems","flex","minWidth","maxWidth","marginHorizontal","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","padding","color","fontWeight","fontSize"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,QAAP;AACA,SAASC,IAAT,QAAqB,uBAArB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AAEA,kBAA0BE,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACAR,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMS,WAAW,GAAGR,QAAQ,CAACS,IAAT,CAAcC,kBAAd,CAAiC,UAAAC,IAAI,EAAI;AACzD,UAAIA,IAAJ,EACIR,UAAU,CAACS,OAAX,CAAmB,MAAnB;AACP,KAHmB,CAApB;AAIA,WAAOJ,WAAP;AACH,GANQ,EAMN,EANM,CAAT;;AASA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBb,IAAAA,QAAQ,CAACS,IAAT,CAAcK,8BAAd,CAA6CV,KAA7C,EAAoDE,QAApD,EACKS,IADL,CACU,UAAAC,eAAe,EAAI;AACrB,UAAML,IAAI,GAAGK,eAAe,CAACL,IAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACP,KAAjB;AACH,KAJL,EAIOe,KAJP,CAIa,UAAAC,KAAK,EAAI;AACdA,MAAAA,KAAK,CAACC,IAAN,IAAc,oBAAd,GAAqCC,KAAK,CAAC,sDAAD,CAA1C,GAAqGF,KAAK,CAACC,IAAN,IAAc,2BAAd,GAA4CC,KAAK,CAAC,wBAAD,CAAjD,GAA8EF,KAAK,CAACC,IAAN,IAAc,oBAAd,GAAqCC,KAAK,CAAC,4BAAD,CAA1C,GAA2EA,KAAK,CAACF,KAAK,CAACG,OAAP,CAAnQ;AACH,KANL;AAOH,GARD;;AAWA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBxB,IAAAA,QAAQ,CAACS,IAAT,CAAcgB,0BAAd,CAAyCrB,KAAzC,EAAgDE,QAAhD,EACKS,IADL,CACU,UAAAC,eAAe,EAAI;AACrB,UAAML,IAAI,GAAGK,eAAe,CAACL,IAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAJL,EAKKC,KALL,CAKW,UAAAC,KAAK,EAAI;AACZA,MAAAA,KAAK,CAACC,IAAN,IAAc,qBAAd,GAAsCC,KAAK,CAAC,uBAAD,CAA3C,GAAuEF,KAAK,CAACC,IAAN,IAAc,oBAAd,GAAqCC,KAAK,CAAC,4BAAD,CAA1C,GAA2EA,KAAK,CAACF,KAAK,CAACG,OAAP,CAAvJ;AACH,KAPL;AAQH,GATD;;AAWA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAI;AACrB1B,IAAAA,QAAQ,CAACS,IAAT,CAAckB,eAAd,CAA8B3B,QAAQ,CAAC4B,QAAvC,EACLb,IADK,CACA,UAACc,MAAD,EAAY;AAEhB,UAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB;AAGA,UAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB;AAEA,UAAIrB,IAAI,GAAGkB,MAAM,CAAClB,IAAlB;;AAEA,UAAI;AACA,YAAIsB,IAAI,GAACjC,QAAQ,CAACkC,EAAT,CAAYC,UAAZ,CAAuB,UAAvB,EAAmCC,KAAnC,CAAyC,QAAzC,EAAkD,IAAlD,EAAuDzB,IAAI,CAACP,KAA5D,EAAmEiC,GAAnE,EAAT;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACK,EAAL,EAAZ;AACH,OAHD,CAGE,OAAOlB,KAAP,EAAc;AACZpB,QAAAA,QAAQ,CAACkC,EAAT,CAAYC,UAAZ,CAAuB,UAAvB,EAAmCI,GAAnC,CAAuC;AACnCC,UAAAA,MAAM,EAAC7B,IAAI,CAACP;AADuB,SAAvC;AAGH;AAEF,KAnBK,EAmBHe,KAnBG,CAmBG,UAACC,KAAD,EAAW;AAACH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACG,OAAlB;AAA2B,KAnB1C;AAoBH,GArBD;;AAuBA,SACI,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEkB,MAAM,CAACC,SAApC;AAA+C,IAAA,QAAQ,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,QAAvB;AAAgC,IAAA,KAAK,EAAExC,KAAvC;AAA8C,IAAA,YAAY,EAAE,sBAAAyC,IAAI;AAAA,aAAIxC,QAAQ,CAACwC,IAAI,CAACjC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAD,CAAZ;AAAA,KAAhE;AAAuG,IAAA,KAAK,EAAE6B,MAAM,CAACK,KAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,eAAvB;AAAoC,IAAA,KAAK,EAAExC,QAA3C;AAAqD,IAAA,YAAY,EAAE,sBAAAuC,IAAI;AAAA,aAAItC,WAAW,CAACsC,IAAD,CAAf;AAAA,KAAvE;AAA8F,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAA5G;AAAmH,IAAA,eAAe,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEvB,WAA3B;AAAwC,IAAA,KAAK,EAAEiB,MAAM,CAACO,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAII,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAI9C,UAAU,CAAC+C,QAAX,CAAoB,QAApB,CAAJ;AAAA,KAA3B;AAA8D,IAAA,KAAK,EAAE,CAACT,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACU,aAAvB,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJJ,CANJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAElB,YAA3B;AAAyC,IAAA,KAAK,EAAE,CAACe,MAAM,CAACO,MAAR,EAAgBP,MAAM,CAACU,aAAvB,EAAsC;AAACE,MAAAA,cAAc,EAAC;AAAhB,KAAtC,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACW,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,IAAI,EAAC,WAAzB;AAAqC,IAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,0BADR,CADA,CAdJ,CADJ;AAsBH,CAlFD;;AAoFA,eAAelD,WAAf;AAEA,IAAMuC,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,eAAe,EAAE;AACbY,IAAAA,KAAK,EAAE;AADM,GADY;AAI7Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,QAAQ,EAAE,GAJH;AAKPC,IAAAA,QAAQ,EAAE,IALH;AAMPC,IAAAA,gBAAgB,EAAE;AANX,GAJkB;AAY7BhB,EAAAA,KAAK,EAAE;AACHiB,IAAAA,eAAe,EAAE,OADd;AAEHC,IAAAA,iBAAiB,EAAE,EAFhB;AAGHC,IAAAA,eAAe,EAAE,EAHd;AAIHC,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,SAAS,EAAE,CALR;AAMHC,IAAAA,WAAW,EAAE,WANV;AAOHC,IAAAA,WAAW,EAAE;AAPV,GAZsB;AAqB7BtB,EAAAA,eAAe,EAAE;AACbS,IAAAA,KAAK,EAAE,KADM;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,UAAU,EAAE,QAHC;AAIbS,IAAAA,SAAS,EAAE;AAJE,GArBY;AA2B7BnB,EAAAA,MAAM,EAAE;AACJQ,IAAAA,KAAK,EAAE,MADH;AAEJO,IAAAA,eAAe,EAAE,SAFb;AAGJO,IAAAA,OAAO,EAAE,EAHL;AAIJJ,IAAAA,YAAY,EAAE,EAJV;AAKJR,IAAAA,UAAU,EAAE;AALR,GA3BqB;AAkC7BT,EAAAA,UAAU,EAAE;AACRsB,IAAAA,KAAK,EAAE,OADC;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAlCiB;AAsC7BrB,EAAAA,aAAa,EAAE;AACXY,IAAAA,eAAe,EAAE,OADN;AAEXI,IAAAA,SAAS,EAAE,CAFA;AAGXC,IAAAA,WAAW,EAAE,SAHF;AAIXC,IAAAA,WAAW,EAAE,CAJF;AAKXZ,IAAAA,cAAc,EAAE,QALL;AAMXC,IAAAA,UAAU,EAAE;AAND,GAtCc;AA8C7BN,EAAAA,iBAAiB,EAAE;AAAEmB,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GA9CU;AA+C7B7B,EAAAA,KAAK,EAAC;AACF6B,IAAAA,UAAU,EAAC,MADT;AAEFC,IAAAA,QAAQ,EAAC,EAFP;AAGFpB,IAAAA,cAAc,EAAC;AAHb;AA/CuB,CAAlB,CAAf","sourcesContent":["import { useNavigation } from '@react-navigation/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport firebase from '../firebase';\r\nimport { Icon } from 'react-native-elements'\r\nconst LoginScreen = () => {\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth.onAuthStateChanged(user => {\r\n            if (user)\r\n                navigation.replace('Home')\r\n        })\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n\r\n    const handleSignUp = () => {\r\n        firebase.auth.createUserWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user\r\n                console.log(user.email)\r\n            }).catch(error => {\r\n                error.code == 'auth/weak-password' ? alert('Contraseña muy débil, debe ser de 6 caracteres o más') : error.code == 'auth/email-already-in-use' ? alert('Este usuario ya existe') : error.code == 'auth/invalid-email' ? alert('El correo está mal escrito') : alert(error.message)\r\n            })\r\n    }\r\n\r\n\r\n    const handleLogin = () => {\r\n        firebase.auth.signInWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user\r\n                console.log('logged with email')\r\n            })\r\n            .catch(error => {\r\n                error.code == 'auth/wrong-password' ? alert('Contraseña incorrecta') : error.code == 'auth/invalid-email' ? alert('El correo está mal escrito') : alert(error.message)\r\n            })\r\n    }\r\n\r\n    const handleGoogle = ()=>{\r\n        firebase.auth.signInWithPopup(firebase.provider)\r\n  .then((result) => {\r\n    /** @type {firebase.auth.OAuthCredential} */\r\n    var credential = result.credential;\r\n\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    var token = credential.accessToken;\r\n    // The signed-in user info.\r\n    var user = result.user;\r\n    // ...\r\n    try {\r\n        let data=firebase.db.collection('usuarios').where('correo','==',user.email).get()\r\n        console.log(data.id())\r\n    } catch (error) {\r\n        firebase.db.collection('usuarios').add({\r\n            correo:user.email,\r\n        })\r\n    }\r\n    \r\n  }).catch((error) => {console.log(error.message)})\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView style={styles.container} behavior='height'>\r\n            <Text style={styles.title}>Reserve+</Text>\r\n            <View style={styles.inputconntainer}>\r\n                <TextInput placeholder='Correo' value={email} onChangeText={text => setEmail(text.replace('\\s+', ''))} style={styles.input} />\r\n                <TextInput placeholder='Contraseña' value={password} onChangeText={text => setPassword(text)} style={styles.input} secureTextEntry />\r\n            </View>\r\n            <View style={styles.buttoncontainer}>\r\n                <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n                    <Text style={styles.buttonText}>Iniciar sesión</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={()=>navigation.navigate('SignUp')} style={[styles.button, styles.buttonOutLine]}>\r\n                    <Text style={styles.buttonOutLineText}>Registrarse</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.inputconntainer}>\r\n            <TouchableOpacity onPress={handleGoogle} style={[styles.button, styles.buttonOutLine, {marginVertical:15}]}>\r\n                    <Text style={styles.buttonOutLineText}> <Icon name='google' type='antdesign' color='#FE2746'/>   Iniciar con Google</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    inputconntainer: {\r\n        width: '80%',\r\n    },\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        minWidth: 400,\r\n        maxWidth: 1000,\r\n        marginHorizontal: 'auto'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n        borderColor: 'lightgray',\r\n        borderWidth: 1\r\n    },\r\n    buttoncontainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        backgroundColor: '#FE2746',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center'\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    buttonOutLine: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#FE2746',\r\n        borderWidth: 2,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonOutLineText: { color: '#FE2746', fontWeight: 'bold' },\r\n    title:{\r\n        fontWeight:'bold',\r\n        fontSize:50,\r\n        marginVertical:10\r\n    }\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}