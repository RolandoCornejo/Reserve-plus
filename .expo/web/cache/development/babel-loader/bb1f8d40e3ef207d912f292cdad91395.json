{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\RestaurantScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/core';\nimport firebase from \"../firebase\";\nimport { ListItem, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function RestaurantScreen(props) {\n  var _this = this;\n\n  var navigation = useNavigation();\n  var restauranteId = props.route.params.restauranteId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurante = _useState2[0],\n      setRestaurante = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      total = _useState6[0],\n      setTotal = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      menu = _useState8[0],\n      setMenu = _useState8[1];\n\n  var getRestaurantById = function getRestaurantById(id) {\n    var ref, doc;\n    return _regeneratorRuntime.async(function getRestaurantById$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ref = firebase.db.collection('restaurantes').doc(id);\n            _context.t0 = _regeneratorRuntime;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(ref.get());\n\n          case 4:\n            _context.t1 = _context.sent.data();\n            _context.next = 7;\n            return _context.t0.awrap.call(_context.t0, _context.t1);\n\n          case 7:\n            doc = _context.sent;\n            setRestaurante(doc);\n            navigation.setOptions({\n              title: doc.nombre,\n              headerStyle: {\n                backgroundColor: doc.color\n              }\n            });\n            setLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var calcularTotal = function calcularTotal() {\n    var newTotal;\n    return _regeneratorRuntime.async(function calcularTotal$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newTotal = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(restaurante.menu.forEach(function (element) {\n              if (element.cantidad > 0) {\n                newTotal += element.precio * element.cantidad;\n                console.log(newTotal);\n              }\n            }));\n\n          case 3:\n            setTotal(newTotal.toFixed(2));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var calcularOrden = function calcularOrden() {\n    var user, detalles, newOrden, final;\n    return _regeneratorRuntime.async(function calcularOrden$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@userId'));\n\n          case 2:\n            user = _context3.sent;\n            detalles = {\n              restaurante: restauranteId,\n              usuario: user,\n              total: 0\n            };\n            newOrden = restaurante.menu.filter(function (item) {\n              return item.cantidad > 0;\n            });\n            restaurante.menu.forEach(function (element) {\n              if (element.cantidad > 0) {\n                detalles.total += (element.precio * element.cantidad).toFixed(2);\n              }\n            });\n            final = {\n              detalles: detalles,\n              orden: newOrden\n            };\n            console.log(final);\n            console.log(newOrden);\n            console.log(detalles);\n            setOrden(final);\n            console.log(orden);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getRestaurantById(restauranteId);\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 84\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: {\n      maxWidth: 2000,\n      marginHorizontal: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"MEN\\xDA\"), restaurante.menu.map(function (item, i) {\n    return React.createElement(ListItem, {\n      key: i,\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, item.platillo), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"$\", item.precio)), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"minus\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }),\n      disabled: item.cantidad == 0 ? true : false,\n      onPress: function onPress() {\n        item.cantidad--;\n        setMenu([].concat(_toConsumableArray(menu), [item]));\n        calcularTotal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, item.cantidad), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"plus\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }),\n      onPress: function onPress() {\n        item.cantidad++;\n        setMenu([].concat(_toConsumableArray(menu), [item]));\n        calcularTotal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }));\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Total: $\", total), React.createElement(Button, {\n    onPress: function onPress() {\n      calcularOrden();\n    },\n    title: \"Realizar orden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/RestaurantScreen.js"],"names":["React","useState","useEffect","useNavigation","firebase","ListItem","Button","Icon","AsyncStorage","RestaurantScreen","props","navigation","restauranteId","route","params","restaurante","setRestaurante","loading","setLoading","total","setTotal","menu","setMenu","getRestaurantById","id","ref","db","collection","doc","get","data","setOptions","title","nombre","headerStyle","backgroundColor","color","calcularTotal","newTotal","forEach","element","cantidad","precio","console","log","toFixed","calcularOrden","getItem","user","detalles","usuario","newOrden","filter","item","final","orden","setOrden","flex","alignItems","alignContent","maxWidth","marginHorizontal","map","i","platillo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, ActivityIndicator, FlatList } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport firebase from '../firebase'\r\nimport { ListItem, Button } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function RestaurantScreen(props) {\r\n  const navigation = useNavigation()\r\n  const { restauranteId } = props.route.params\r\n\r\n  const [restaurante, setRestaurante] = useState({});\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [menu, setMenu] = useState([]);\r\n\r\n  const getRestaurantById = async (id) => {\r\n    const ref = firebase.db.collection('restaurantes').doc(id);\r\n    const doc = await (await ref.get()).data()\r\n    setRestaurante(doc)\r\n    navigation.setOptions({\r\n      title: doc.nombre, headerStyle: {\r\n        backgroundColor: doc.color,\r\n      },\r\n    })\r\n\r\n    setLoading(false)\r\n    // console.log(doc.menu)\r\n    // console.log(doc)\r\n  }\r\n\r\n  const calcularTotal = async () => {\r\n\r\n    let newTotal = 0;\r\n\r\n    await restaurante.menu.forEach(element => {\r\n      if (element.cantidad > 0) {\r\n        newTotal += (element.precio * element.cantidad);\r\n        console.log(newTotal)\r\n      }\r\n    });\r\n    setTotal(newTotal.toFixed(2 ));\r\n  }\r\n\r\n  const calcularOrden = async () => {\r\n\r\n    const user = await AsyncStorage.getItem('@userId')\r\n    //Detalles de cliente y restaurante\r\n    let detalles = { restaurante: restauranteId, usuario: user, total: 0 }\r\n\r\n    let newOrden = restaurante.menu.filter((item) => {\r\n      return (item.cantidad > 0)\r\n    })\r\n\r\n    restaurante.menu.forEach(element => {\r\n      if (element.cantidad > 0) {\r\n        detalles.total += (element.precio * element.cantidad).toFixed(2);\r\n      }\r\n    });\r\n    let final = { detalles, orden: newOrden }\r\n    console.log(final);\r\n    console.log(newOrden);\r\n    console.log(detalles);\r\n    setOrden(final);\r\n    console.log(orden);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRestaurantById(restauranteId);\r\n\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <View style={{ flex: 1, alignItems: 'center', alignContent: 'center' }}><ActivityIndicator /></View>\r\n  }\r\n\r\n  return (\r\n    <View style={{ maxWidth: 2000, marginHorizontal: 'auto' }}>\r\n      <Text>MENÚ</Text>\r\n      {\r\n        restaurante.menu.map((item, i) => (\r\n          <ListItem key={i} bottomDivider>\r\n\r\n            <ListItem.Content>\r\n              <ListItem.Title>{item.platillo}</ListItem.Title>\r\n              <ListItem.Subtitle>${item.precio}</ListItem.Subtitle>\r\n            </ListItem.Content>\r\n\r\n            <Button\r\n              icon={\r\n                <Icon\r\n                  name=\"minus\"\r\n                  size={15}\r\n                  color=\"white\"\r\n                />\r\n              }\r\n              disabled={item.cantidad == 0 ? true : false}\r\n              onPress={() => { item.cantidad--; setMenu([...menu, item]); calcularTotal() }}\r\n\r\n            /><Text>{item.cantidad}</Text>\r\n            <Button\r\n              icon={\r\n                <Icon\r\n                  name=\"plus\"\r\n                  size={15}\r\n                  color=\"white\"\r\n                />\r\n              }\r\n              onPress={() => { item.cantidad++; setMenu([...menu, item]); calcularTotal() }}\r\n\r\n            />\r\n          </ListItem>\r\n        ))\r\n      }\r\n      <Text>Total: ${total}</Text>\r\n      <Button\r\n\r\n        onPress={() => { calcularOrden() }}\r\n        title='Realizar orden'\r\n      />\r\n    </View>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}