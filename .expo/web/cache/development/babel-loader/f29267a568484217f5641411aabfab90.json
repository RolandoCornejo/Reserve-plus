{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\RestaurantScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/core';\nimport firebase from \"../firebase\";\nimport { ListItem, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport RandExp from \"randexp\";\nexport default function RestaurantScreen(props) {\n  var _this = this;\n\n  var navigation = useNavigation();\n  var restauranteId = props.route.params.restauranteId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurante = _useState2[0],\n      setRestaurante = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      total = _useState6[0],\n      setTotal = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      menu = _useState8[0],\n      setMenu = _useState8[1];\n\n  var _useState9 = useState(new Date()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      date = _useState10[0],\n      setDate = _useState10[1];\n\n  var _useState11 = useState('date'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mode = _useState12[0],\n      setMode = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      show = _useState14[0],\n      setShow = _useState14[1];\n\n  var _useState15 = useState('Empty'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      text = _useState16[0],\n      setText = _useState16[1];\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var onChange = function onChange(event, seletedDate) {\n    var currentDate = seletedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n    var tempDate = new Date(currentDate);\n    var fDate = tempDate.getDate() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getFullYear();\n    var fTime = tempDate.getHours() + ':' + tempDate.getMinutes();\n    setText(fDate + ' ' + fTime);\n    console.log(fDate + ' (' + fTime + ')');\n  };\n\n  var getRestaurantById = function getRestaurantById(id) {\n    var ref, doc;\n    return _regeneratorRuntime.async(function getRestaurantById$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ref = firebase.db.collection('restaurantes').doc(id);\n            _context.t0 = _regeneratorRuntime;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(ref.get());\n\n          case 4:\n            _context.t1 = _context.sent.data();\n            _context.next = 7;\n            return _context.t0.awrap.call(_context.t0, _context.t1);\n\n          case 7:\n            doc = _context.sent;\n            setRestaurante(doc);\n            navigation.setOptions({\n              title: doc.nombre,\n              headerStyle: {\n                backgroundColor: doc.color\n              }\n            });\n            setLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var calcularTotal = function calcularTotal() {\n    var newTotal;\n    return _regeneratorRuntime.async(function calcularTotal$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newTotal = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(restaurante.menu.forEach(function (element) {\n              if (element.cantidad > 0) {\n                newTotal += element.precio * element.cantidad;\n                console.log(newTotal);\n              }\n            }));\n\n          case 3:\n            setTotal(newTotal.toFixed(2));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var calcularOrden = function calcularOrden() {\n    var user, detalles, newOrden, final;\n    return _regeneratorRuntime.async(function calcularOrden$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@userId'));\n\n          case 2:\n            user = _context3.sent;\n            detalles = {\n              restaurante: restauranteId,\n              usuario: user,\n              total: 0,\n              fecha: new Date()\n            };\n            newOrden = restaurante.menu.filter(function (item) {\n              return item.cantidad > 0;\n            });\n            restaurante.menu.forEach(function (element) {\n              if (element.cantidad > 0) {\n                detalles.total += (element.precio * element.cantidad).toFixed(2);\n              }\n            });\n            final = {\n              detalles: detalles,\n              orden: newOrden\n            };\n            console.log(final);\n            console.log(new RandExp(/^[A-Z]{3}-[0-9]{3}/).gen());\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getRestaurantById(restauranteId);\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    }, React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 84\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: {\n      maxWidth: 2000,\n      marginHorizontal: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      showMode('date');\n    },\n    title: \"Seleccionar fecha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      showMode('time');\n    },\n    title: \"Seleccionar hora\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"Datetime\",\n    value: date,\n    mode: mode,\n    is24Hour: false,\n    display: \"default\",\n    onChange: onchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, text), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"MEN\\xDA\"), restaurante.menu.map(function (item, i) {\n    return React.createElement(ListItem, {\n      key: i,\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, item.platillo), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"$\", item.precio)), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"minus\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }),\n      disabled: item.cantidad == 0 ? true : false,\n      onPress: function onPress() {\n        item.cantidad--;\n        setMenu([].concat(_toConsumableArray(menu), [item]));\n        calcularTotal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, item.cantidad), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"plus\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }),\n      onPress: function onPress() {\n        item.cantidad++;\n        setMenu([].concat(_toConsumableArray(menu), [item]));\n        calcularTotal();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }));\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Total: $\", total), React.createElement(Button, {\n    onPress: function onPress() {\n      calcularOrden();\n    },\n    title: \"Realizar orden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/RestaurantScreen.js"],"names":["React","useState","useEffect","useNavigation","firebase","ListItem","Button","Icon","AsyncStorage","DateTimePicker","RandExp","RestaurantScreen","props","navigation","restauranteId","route","params","restaurante","setRestaurante","loading","setLoading","total","setTotal","menu","setMenu","Date","date","setDate","mode","setMode","show","setShow","text","setText","showMode","currentMode","onChange","event","seletedDate","currentDate","Platform","OS","tempDate","fDate","getDate","getMonth","getFullYear","fTime","getHours","getMinutes","console","log","getRestaurantById","id","ref","db","collection","doc","get","data","setOptions","title","nombre","headerStyle","backgroundColor","color","calcularTotal","newTotal","forEach","element","cantidad","precio","toFixed","calcularOrden","getItem","user","detalles","usuario","fecha","newOrden","filter","item","final","orden","gen","flex","alignItems","alignContent","maxWidth","marginHorizontal","onchange","map","i","platillo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, ActivityIndicator, FlatList, Platform } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport firebase from '../firebase'\r\nimport { ListItem, Button } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport RandExp from \"randexp\";\r\n\r\nexport default function RestaurantScreen(props) {\r\n  const navigation = useNavigation()\r\n  const { restauranteId } = props.route.params\r\n\r\n  const [restaurante, setRestaurante] = useState({});\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [menu, setMenu] = useState([]);\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [mode, setMode] = useState('date');\r\n  const [show, setShow] = useState(false);\r\n  const [text, setText] = useState('Empty');\r\n\r\n  const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  }\r\n\r\n  const onChange = (event, seletedDate) => {\r\n    const currentDate = seletedDate || date\r\n    setShow(Platform.OS === 'ios');\r\n    setDate(currentDate);\r\n\r\n    let tempDate = new Date(currentDate);\r\n\r\n    let fDate = tempDate.getDate() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getFullYear();\r\n    let fTime = tempDate.getHours() + ':' + tempDate.getMinutes();\r\n    setText(fDate + ' ' + fTime);\r\n    console.log(fDate + ' (' + fTime + ')')\r\n  }\r\n\r\n  //Obtiene el resstaurante\r\n  const getRestaurantById = async (id) => {\r\n    const ref = firebase.db.collection('restaurantes').doc(id);\r\n    const doc = await (await ref.get()).data()\r\n    setRestaurante(doc)\r\n    navigation.setOptions({\r\n      title: doc.nombre, headerStyle: {\r\n        backgroundColor: doc.color,\r\n      },\r\n    })\r\n    setLoading(false)\r\n  }\r\n\r\n  //Calcula el total de la orden\r\n  const calcularTotal = async () => {\r\n    let newTotal = 0;\r\n    await restaurante.menu.forEach(element => {\r\n      if (element.cantidad > 0) {\r\n        newTotal += (element.precio * element.cantidad);\r\n        console.log(newTotal)\r\n      }\r\n    });\r\n    setTotal(newTotal.toFixed(2));\r\n  }\r\n  //Envia la orden a la base de datos\r\n  const calcularOrden = async () => {\r\n\r\n    const user = await AsyncStorage.getItem('@userId')\r\n    //Detalles de cliente y restaurante\r\n    let detalles = { restaurante: restauranteId, usuario: user, total: 0,fecha:new Date() }\r\n\r\n    let newOrden = restaurante.menu.filter((item) => {\r\n      return (item.cantidad > 0)\r\n    })\r\n\r\n    restaurante.menu.forEach(element => {\r\n      if (element.cantidad > 0) {\r\n        detalles.total += (element.precio * element.cantidad).toFixed(2);\r\n      }\r\n    });\r\n    let final = { detalles, orden: newOrden }\r\n\r\n    console.log(final);\r\n    //firebase.db.collection('reservasiones').add(final)\r\n    console.log(new RandExp(/^[A-Z]{3}-[0-9]{3}/).gen());\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRestaurantById(restauranteId);\r\n\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <View style={{ flex: 1, alignItems: 'center', alignContent: 'center' }}><ActivityIndicator /></View>\r\n  }\r\n\r\n  return (\r\n    <View style={{ maxWidth: 2000, marginHorizontal: 'auto' }}>\r\n      <Button\r\n        onPress={() => { showMode('date') }}\r\n        title='Seleccionar fecha'\r\n      />\r\n      <Button\r\n        onPress={() => { showMode('time') }}\r\n        title='Seleccionar hora'\r\n      />\r\n\r\n      {show && (\r\n        <DateTimePicker\r\n        testID='Datetime'\r\n        value={date}\r\n        mode={mode}\r\n        is24Hour={false}\r\n        display='default'\r\n        onChange={onchange}/>\r\n      )}\r\n\r\n      <Text>{text}</Text>\r\n      <Text>MENÚ</Text>\r\n      {\r\n        restaurante.menu.map((item, i) => (\r\n          <ListItem key={i} bottomDivider>\r\n\r\n            <ListItem.Content>\r\n              <ListItem.Title>{item.platillo}</ListItem.Title>\r\n              <ListItem.Subtitle>${item.precio}</ListItem.Subtitle>\r\n            </ListItem.Content>\r\n\r\n            <Button\r\n              icon={\r\n                <Icon\r\n                  name=\"minus\"\r\n                  size={15}\r\n                  color=\"white\"\r\n                />\r\n              }\r\n              disabled={item.cantidad == 0 ? true : false}\r\n              onPress={() => { item.cantidad--; setMenu([...menu, item]); calcularTotal() }}\r\n\r\n            /><Text>{item.cantidad}</Text>\r\n            <Button\r\n              icon={\r\n                <Icon\r\n                  name=\"plus\"\r\n                  size={15}\r\n                  color=\"white\"\r\n                />\r\n              }\r\n              onPress={() => { item.cantidad++; setMenu([...menu, item]); calcularTotal() }}\r\n\r\n            />\r\n          </ListItem>\r\n        ))\r\n      }\r\n      <Text>Total: ${total}</Text>\r\n      <Button\r\n        onPress={() => { calcularOrden() }}\r\n        title='Realizar orden'\r\n      />\r\n    </View>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}