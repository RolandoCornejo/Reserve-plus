{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\RestaurantScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/core';\nimport firebase from \"../firebase\";\nexport default function RestaurantScreen(props) {\n  var navigation = useNavigation();\n  var id = props.route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurantes = _useState2[0],\n      setRestaurantes = _useState2[1];\n\n  useEffect(function () {\n    var subscriber = firebase.db.collection('restaurantes').onSnapshot(function (querySnapshot) {\n      var restaurantes = [];\n      querySnapshot.docs.forEach(function (docs) {\n        var _docs$data = docs.data(),\n            nombre = _docs$data.nombre,\n            color = _docs$data.color;\n\n        restaurantes.push({\n          key: docs.id,\n          nombre: nombre,\n          color: color\n        });\n      });\n      setRestaurantes(restaurantes);\n      console.log(restaurantes);\n      setLoading(false);\n    });\n    return function () {\n      return subscriber();\n    };\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"This is the page for the \", name, \" Restaurant\"));\n}","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/RestaurantScreen.js"],"names":["React","useState","useEffect","useNavigation","firebase","RestaurantScreen","props","navigation","id","route","params","restaurantes","setRestaurantes","subscriber","db","collection","onSnapshot","querySnapshot","docs","forEach","data","nombre","color","push","key","console","log","setLoading","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,MAAOK,EAAP,GAAWF,KAAK,CAACG,KAAN,CAAYC,MAAvB,CAAOF,EAAP;;AAEA,kBAAqCP,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOU,YAAP;AAAA,MAAoBC,eAApB;;AAEAV,EAAAA,SAAS,CAAC,YAAI;AAEV,QAAMW,UAAU,GAAGT,QAAQ,CAACU,EAAT,CAAYC,UAAZ,CAAuB,cAAvB,EAAuCC,UAAvC,CAAkD,UAAAC,aAAa,EAAI;AAClF,UAAMN,YAAY,GAAG,EAArB;AACAM,MAAAA,aAAa,CAACC,IAAd,CAAmBC,OAAnB,CAA2B,UAAAD,IAAI,EAAE;AAC7B,yBAAqBA,IAAI,CAACE,IAAL,EAArB;AAAA,YAAOC,MAAP,cAAOA,MAAP;AAAA,YAAcC,KAAd,cAAcA,KAAd;;AACAX,QAAAA,YAAY,CAACY,IAAb,CAAkB;AAACC,UAAAA,GAAG,EAACN,IAAI,CAACV,EAAV;AAAaa,UAAAA,MAAM,EAANA,MAAb;AAAoBC,UAAAA,KAAK,EAALA;AAApB,SAAlB;AACH,OAHD;AAIAV,MAAAA,eAAe,CAACD,YAAD,CAAf;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;AACAgB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATkB,CAAnB;AAWA,WAAO;AAAA,aAAId,UAAU,EAAd;AAAA,KAAP;AACH,GAdQ,EAcP,EAdO,CAAT;AAgBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgCe,IAAhC,gBADJ,CADJ;AAKH","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport firebase from '../firebase'\r\n\r\nexport default function RestaurantScreen(props) {\r\n    const navigation = useNavigation()\r\n    const {id}=props.route.params\r\n\r\n    const [restaurantes,setRestaurantes]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        \r\n        const subscriber = firebase.db.collection('restaurantes').onSnapshot(querySnapshot => {\r\n            const restaurantes = []\r\n            querySnapshot.docs.forEach(docs=>{\r\n                const {nombre,color}=docs.data()\r\n                restaurantes.push({key:docs.id,nombre,color})\r\n            })\r\n            setRestaurantes(restaurantes)\r\n            console.log(restaurantes)\r\n            setLoading(false)\r\n        })\r\n        \r\n        return ()=>subscriber()\r\n    },[])   \r\n\r\n    return (\r\n        <View>\r\n            <Text>This is the page for the {name} Restaurant</Text>\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}