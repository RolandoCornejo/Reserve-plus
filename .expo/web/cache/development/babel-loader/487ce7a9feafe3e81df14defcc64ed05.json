{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport auth from \"../firebase\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (user) navigation.navigate('home');\n    });\n    return function () {\n      cleanup;\n    };\n  }, [input]);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('logged with email');\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"height\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputconntainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttoncontainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      handleLogin;\n    },\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Iniciar sesion\")), React.createElement(TouchableOpacity, {\n    onPress: handleSignUp,\n    style: [styles.button, styles.buttonOutLine],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonOutLineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Registrarse\"))));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  inputconntainer: {\n    width: '80%'\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 400,\n    maxWidth: 1000,\n    marginHorizontal: 'auto'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    borderColor: 'lightgray',\n    borderWidth: 1\n  },\n  buttoncontainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    width: '100%',\n    backgroundColor: '#0782f9',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  buttonOutLine: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782f9',\n    borderWidth: 2\n  },\n  buttonOutLineText: {\n    color: '#0782f9',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/LoginScreen.js"],"names":["React","useState","useEffect","auth","LoginScreen","email","setEmail","password","setPassword","onAuthStateChanged","user","navigation","navigate","cleanup","input","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","handleLogin","signInWithEmailAndPassword","styles","container","inputconntainer","text","buttoncontainer","button","buttonText","buttonOutLine","buttonOutLineText","StyleSheet","create","width","justifyContent","alignItems","flex","minWidth","maxWidth","marginHorizontal","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","borderColor","borderWidth","padding","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport auth from '../firebase';\r\nconst LoginScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\nuseEffect(() => {\r\n    auth.onAuthStateChanged(user => {if(user) navigation.navigate('home')})\r\n    return () => {\r\n        cleanup\r\n    }\r\n}, [input])\r\n\r\n\r\n    const handleSignUp = () => {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user\r\n                console.log(user.email)\r\n            }).catch(error=>console.log(error))\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        auth.signInWithEmailAndPassword(email,password)\r\n        .then(userCredentials => {\r\n            const user = userCredentials.user\r\n            console.log('logged with email')\r\n        }).catch(error=>console.log(error))\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView style={styles.container} behavior='height'>\r\n            <View style={styles.inputconntainer}>\r\n                <TextInput placeholder='email' value={email} onChangeText={text => setEmail(text)} style={styles.input} />\r\n                <TextInput placeholder='password' value={password} onChangeText={text => setPassword(text)} style={styles.input} secureTextEntry />\r\n            </View>\r\n            <View style={styles.buttoncontainer}>\r\n                <TouchableOpacity onPress={() => { handleLogin }} style={styles.button}>\r\n                    <Text style={styles.buttonText}>Iniciar sesion</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={handleSignUp} style={[styles.button, styles.buttonOutLine]}>\r\n                    <Text style={styles.buttonOutLineText}>Registrarse</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    inputconntainer: {\r\n        width: '80%',\r\n    },\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        minWidth: 400,\r\n        maxWidth: 1000,\r\n        marginHorizontal: 'auto'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n        borderColor: 'lightgray',\r\n        borderWidth: 1\r\n    },\r\n    buttoncontainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        backgroundColor: '#0782f9',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center'\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    buttonOutLine: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782f9',\r\n        borderWidth: 2\r\n    },\r\n    buttonOutLineText: { color: '#0782f9', fontWeight: 'bold' },\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}