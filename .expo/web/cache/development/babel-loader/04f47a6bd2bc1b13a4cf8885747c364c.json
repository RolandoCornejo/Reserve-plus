{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rolan\\\\Desktop\\\\Reserve-plus\\\\screens\\\\RestaurantScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/core';\nimport firebase from \"../firebase\";\nimport { ListItem, Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function RestaurantScreen(props) {\n  var _this = this;\n\n  var navigation = useNavigation();\n  var restauranteId = props.route.params.restauranteId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurante = _useState2[0],\n      setRestaurante = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orden = _useState6[0],\n      setOrden = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      menu = _useState8[0],\n      setMenu = _useState8[1];\n\n  var getRestaurantById = function getRestaurantById(id) {\n    var ref, doc;\n    return _regeneratorRuntime.async(function getRestaurantById$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ref = firebase.db.collection('restaurantes').doc(id);\n            _context.t0 = _regeneratorRuntime;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(ref.get());\n\n          case 4:\n            _context.t1 = _context.sent.data();\n            _context.next = 7;\n            return _context.t0.awrap.call(_context.t0, _context.t1);\n\n          case 7:\n            doc = _context.sent;\n            setRestaurante(doc);\n            navigation.setOptions({\n              title: doc.nombre,\n              headerStyle: {\n                backgroundColor: doc.color\n              }\n            });\n            setLoading(false);\n            console.log(doc.menu);\n            console.log(doc);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var calcularOrden = function calcularOrden() {\n    var user, detalles, newOrden;\n    return _regeneratorRuntime.async(function calcularOrden$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@userId'));\n\n          case 2:\n            user = _context2.sent;\n            detalles = {\n              restaurante: restauranteId,\n              usuario: user,\n              total: 0\n            };\n            newOrden = restaurante.menu.filter(function (item) {\n              return item.cantidad > 0;\n            });\n            restaurante.menu.forEach(function (element) {\n              if (element.cantidad > 0) {\n                detalles.total += element.precio * element.cantidad;\n              }\n            });\n            console.log(orden);\n            console.log(newOrden);\n            setOrden({\n              detalles: detalles,\n              newOrden: newOrden\n            });\n            console.log(orden);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getRestaurantById(restauranteId);\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        alignContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 84\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"MEN\\xDA\"), restaurante.menu.map(function (item, i) {\n    return React.createElement(ListItem, {\n      key: i,\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, React.createElement(ListItem.Chevron, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, item.platillo), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"$\", item.precio)), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"minus\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }),\n      disabled: item.cantidad == 0 ? true : false,\n      onPress: function onPress() {\n        item.cantidad--;\n        setMenu([].concat(_toConsumableArray(menu), [item]));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, item.cantidad), React.createElement(Button, {\n      icon: React.createElement(Icon, {\n        name: \"plus\",\n        size: 15,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }),\n      onPress: function onPress() {\n        item.cantidad++;\n        setMenu([].concat(_toConsumableArray(menu), [item]));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      calcularOrden();\n    },\n    title: \"Realizar orden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/rolan/Desktop/Reserve-plus/screens/RestaurantScreen.js"],"names":["React","useState","useEffect","useNavigation","firebase","ListItem","Button","Icon","AsyncStorage","RestaurantScreen","props","navigation","restauranteId","route","params","restaurante","setRestaurante","loading","setLoading","orden","setOrden","menu","setMenu","getRestaurantById","id","ref","db","collection","doc","get","data","setOptions","title","nombre","headerStyle","backgroundColor","color","console","log","calcularOrden","getItem","user","detalles","usuario","total","newOrden","filter","item","cantidad","forEach","element","precio","flex","alignItems","alignContent","map","i","platillo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, ActivityIndicator, FlatList } from 'react-native'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport firebase from '../firebase'\r\nimport { ListItem, Button } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function RestaurantScreen(props) {\r\n  const navigation = useNavigation()\r\n  const { restauranteId } = props.route.params\r\n\r\n  const [restaurante, setRestaurante] = useState({});\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const [orden, setOrden] = useState();\r\n  const [menu, setMenu] = useState([]);\r\n\r\n  const getRestaurantById = async (id) => {\r\n    const ref = firebase.db.collection('restaurantes').doc(id);\r\n    const doc = await (await ref.get()).data()\r\n    setRestaurante(doc)\r\n    navigation.setOptions({\r\n      title: doc.nombre, headerStyle: {\r\n        backgroundColor: doc.color,\r\n      },\r\n    })\r\n\r\n    setLoading(false)\r\n    console.log(doc.menu)\r\n    console.log(doc)\r\n  }\r\n\r\n    const calcularOrden=async()=>{\r\n      //Detalles de cliente y restaurante\r\n      const user =await AsyncStorage.getItem('@userId')\r\n\r\n      let detalles={restaurante:restauranteId,usuario:user,total:0}\r\n\r\n      let newOrden=restaurante.menu.filter((item)=>{\r\n          return (item.cantidad>0)\r\n      })\r\n\r\n      restaurante.menu.forEach(element => {\r\n        if(element.cantidad>0){\r\n          detalles.total+=element.precio*element.cantidad;\r\n        }\r\n      });\r\n\r\n      console.log(orden);\r\n      console.log(newOrden);\r\n      setOrden({detalles,newOrden});\r\n      console.log(orden);\r\n    }\r\n\r\n  useEffect(() => {\r\n    getRestaurantById(restauranteId);\r\n\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <View style={{ flex: 1, alignItems: 'center', alignContent: 'center' }}><ActivityIndicator /></View>\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Text>MENÚ</Text>\r\n      {\r\n        restaurante.menu.map((item, i) => (\r\n          <ListItem key={i} bottomDivider>\r\n            <ListItem.Chevron />\r\n            <ListItem.Content>\r\n              <ListItem.Title>{item.platillo}</ListItem.Title>\r\n              <ListItem.Subtitle>${item.precio}</ListItem.Subtitle>\r\n            </ListItem.Content>\r\n            \r\n              <Button\r\n                icon={\r\n                  <Icon\r\n                    name=\"minus\"\r\n                    size={15}\r\n                    color=\"white\"\r\n                  />\r\n                }\r\n                disabled={item.cantidad==0?true:false}\r\n                onPress={()=>{item.cantidad--;setMenu([...menu,item])}}\r\n\r\n              /><Text>{item.cantidad}</Text>\r\n              <Button\r\n                icon={\r\n                  <Icon\r\n                    name=\"plus\"\r\n                    size={15}\r\n                    color=\"white\"\r\n                  />\r\n                }\r\n                onPress={()=>{item.cantidad++;setMenu([...menu,item])}}\r\n\r\n              />\r\n          </ListItem>\r\n        ))\r\n      }\r\n       <Button\r\n               \r\n                onPress={()=>{calcularOrden()}}\r\n                title='Realizar orden'\r\n              />\r\n    </View>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}